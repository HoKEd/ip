package com.everis.stepsdef;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.And;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import java.io.File;
import java.util.concurrent.TimeUnit;
import static org.junit.Assert.assertTrue;


public class stepDefsGiven{ 
	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 0.6560100196199231
	 */
	@Given("^the following text is parsed:$")
	public void followingTextIsParsed(String following) {
		WebElement obj = ClientDetailPage.driver.findElement(ClientDetailPage.following);
		if (!following.equals("")){
			obj.sendKeys(following);
		}else{
			obj.sendKeys("following text is parsed:");
		}
	}

	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 0.9212415483434754
	 */
	@And("^go to the \"([^\"]*)\"$")
	public void goTo(String url) {
		SearchInGooglePage.driver.get(url);
	}

	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 0.5474189102536438
	 */
	@Given("^I have Cucumber's home dir defined in CUCUMBER_HOME$")
	public void iHaveCucumbersHomeDirDefinedInCUCUMBERHOME(String value) {
		WebElement body = MakeOrderPage.driver.findElement(MakeOrderPage.body);
		String bodyText = body.getText();
		assertTrue(bodyText.contains(value));
	}

	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 1.0
	 */
	@Given("^Open firefox browser$")
	public void openFirefoxBrowser(String browser) {
		String myBrowser = browser.toUpperCase().trim();
		String pathToDriverServerDir = ""; //TODO
		
		if (myBrowser.contains("FIREFOX")){
			System.setProperty("webdriver.gecko.driver", pathToDriverServerDir+File.separator+"geckodriver.exe");
			SearchInGooglePage.driver = new FirefoxDriver();
		}else if (myBrowser.contains("CHROME")){
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			SearchInGooglePage.driver = new ChromeDriver();
		}else if (myBrowser.contains("IE") || myBrowser.contains("EXPLORER")){
			System.setProperty("webdriver.ie.driver", pathToDriverServerDir+File.separator+"IEDriverServer.exe");
			SearchInGooglePage.driver = new InternetExplorerDriver();
		}else if (myBrowser.contains("EDGE")){
			System.setProperty("webdriver.edge.driver", pathToDriverServerDir+File.separator+"msedgedriver.exe");
			SearchInGooglePage.driver = new EdgeDriver();
		}else{
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			SearchInGooglePage.driver = new ChromeDriver();
		}
		
		SearchInGooglePage.driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}

	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 0.641917764709052
	 */
	@Given("^a \"([^\"]*)\", "native" "root" parser$")
	public void enParser(String aValue) {
		String myBrowser = %TYPEOBJECT%.toUpperCase().trim();
		String pathToDriverServerDir = ""; //TODO
		
		if (myBrowser.contains("FIREFOX")){
			System.setProperty("webdriver.gecko.driver", pathToDriverServerDir+File.separator+"geckodriver.exe");
			ClientDetailPage.driver = new FirefoxDriver();
		}else if (myBrowser.contains("CHROME")){
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			ClientDetailPage.driver = new ChromeDriver();
		}else if (myBrowser.contains("IE") || myBrowser.contains("EXPLORER")){
			System.setProperty("webdriver.ie.driver", pathToDriverServerDir+File.separator+"IEDriverServer.exe");
			ClientDetailPage.driver = new InternetExplorerDriver();
		}else if (myBrowser.contains("EDGE")){
			System.setProperty("webdriver.edge.driver", pathToDriverServerDir+File.separator+"msedgedriver.exe");
			ClientDetailPage.driver = new EdgeDriver();
		}else{
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			ClientDetailPage.driver = new ChromeDriver();
		}
		
		ClientDetailPage.driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}

	/** Method autogenerated by iBDD tool
	 *	 Code implemented with a probability of: 0.9221320346320346
	 */
	@Given("^I open \"([^\"]*)\" browser$")
	public void iOpenBrowser(String browser) {
		String myBrowser = browser.toUpperCase().trim();
		String pathToDriverServerDir = ""; //TODO
		
		if (myBrowser.contains("FIREFOX")){
			System.setProperty("webdriver.gecko.driver", pathToDriverServerDir+File.separator+"geckodriver.exe");
			SendContactMessagePage.driver = new FirefoxDriver();
		}else if (myBrowser.contains("CHROME")){
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			SendContactMessagePage.driver = new ChromeDriver();
		}else if (myBrowser.contains("IE") || myBrowser.contains("EXPLORER")){
			System.setProperty("webdriver.ie.driver", pathToDriverServerDir+File.separator+"IEDriverServer.exe");
			SendContactMessagePage.driver = new InternetExplorerDriver();
		}else if (myBrowser.contains("EDGE")){
			System.setProperty("webdriver.edge.driver", pathToDriverServerDir+File.separator+"msedgedriver.exe");
			SendContactMessagePage.driver = new EdgeDriver();
		}else{
			System.setProperty("webdriver.chrome.driver", pathToDriverServerDir+File.separator+"chromedriver.exe");
			SendContactMessagePage.driver = new ChromeDriver();
		}
		
		SendContactMessagePage.driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}

}